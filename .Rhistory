head(mtcars)
data(mtcars)
head(mtcars)
#set and get location
getwd()
setwd("D:/data")
#library
install.packages("factoextra")
install.packages("cluster")
install.packages("magrittr")
library("cluster")
library("factoextra")
library("magrittr")
#get dataset
dataset <- read.csv("datamining.csv", sep = ";")
#scale the data then cluster the data
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
#inspect the model
res.hc
head(res.hc)
#visualize the result
fviz_dend(res.hc, k = 3,
cex = 0.5,
k_colors = c("#2E9FDF", "#FC4E07", "#00AFBB"),
color_labels_by_k = TRUE,
rect = TRUE
cl <- kmeans(dataset[2:3], 3)
cl$centers
cl
plot(dataset[2:3], col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex =2)
)
#scale the data then cluster the data
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
#scale the data then cluster the data
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
#scale the data then cluster the data
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
head(res.hc)
#visualize the result
fviz_dend(res.hc, k = 3,
cex = 0.5,
k_colors = c("#2E9FDF", "#FC4E07", "#00AFBB"),
color_labels_by_k = TRUE,
rect = TRUE
cl <- kmeans(dataset[2:3], 3)
cl$centers
cl
plot(dataset[2:3], col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex =2)
)
#library
install.packages("factoextra")
install.packages("factoextra")
install.packages("cluster")
install.packages("magrittr")
#scale the data then cluster the data
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
#scale the data then cluster the data
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
#visualize the result
fviz_dend(res.hc, k = 3,
cex = 0.5,
k_colors = c("#2E9FDF", "#FC4E07", "#00AFBB"),
color_labels_by_k = TRUE,
rect = TRUE
cl <- kmeans(dataset[2:3], 3)
cl$centers
cl
plot(dataset[2:3], col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex =2)
)
#visualize the result
fviz_dend(res.hc, k = 3,
cex = 0.5,
k_colors = c("#2E9FDF", "#FC4E07", "#00AFBB"),
color_labels_by_k = TRUE,
rect = TRUE
cl <- kmeans(dataset[2:3], 3)
cl$centers
cl
plot(dataset[2:3], col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex =2)
)
#visualize the result
fviz_dend(res.hc, k = 3,
cex = 0.5,
k_colors = c("#2E9FDF", "#FC4E07", "#00AFBB"),
color_labels_by_k = TRUE,
rect = TRUE
cl <- kmeans(dataset[2:3], 3)
cl$centers
cl
plot(dataset[2:3], col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex =2)
)
#visualize the result
fviz_dend(res.hc, k = 3,
cex = 0.5,
k_colors = c("#2E9FDF", "#FC4E07", "#00AFBB"),
color_labels_by_k = TRUE,
rect = TRUE
)
setwd("D:/data")
library("cluster")
library("factoextra")
library("magrittr")
#get dataset
dataset <- read.csv("datamining.csv", sep = ";")
#scale the data then cluster the data
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
#scale the data then cluster the data
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
head(res.hc)
#visualize the result
fviz_dend(res.hc, k = 3,
cex = 0.5,
k_colors = c("#2E9FDF", "#FC4E07", "#00AFBB"),
color_labels_by_k = TRUE,
rect = TRUE
)
load("D:/p13_3311811071/.RData")
View(dataset)
#scale the data then cluster the data
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
head(res.hc)
View(dataset)
#scale the data then cluster the data
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
#get dataset
dataset <- read.csv("datamining.csv", sep = ";")
View(dataset)
#scale the data then cluster the data
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
cl <- kmeans(dataset[2:3], 3)
#visualize the result
fviz_dend(res.hc, k = 3,
cex = 0.5,
k_colors = c("#2E9FDF", "#FC4E07", "#00AFBB"),
color_labels_by_k = TRUE,
rect = TRUE
)
cl <- kmeans(dataset[2:3], 3)
points(cl$centers, col = 1:2, pch = 8, cex =2)
cl <- kmeans(dataset[2:3], 3)
points(cl$centers, col = 1:2, pch = 8, cex =2)
points(cl$centers, col = 1:2, pch = 8, cex =2)
#get dataset
dataset <- read.csv("datamining.csv", sep = ";")
#scale the data then cluster the data
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
View(res.hc)
View(res.hc)
q()
getwd()
setwd("C:/Users/ASUS/Downloads/Dsata")
dataset <- read.csv("datamining.csv", sep = ",")
View(dataset)
#set and get location
getwd()
setwd("C:/Users/ASUS/Downloads/Data")
dataset <- read.csv("datamining.csv", sep = ",")
fviz_dend(res.hc, k = 3,
cex = 0.5,
k_colors = c("#2E9FDF", "#FC4E07", "#00AFBB"),
color_labels_by_k = TRUE,
rect = TRUE
)
dataset <- read.csv("datamining.csv", sep = ",")
#scale the data then cluster the data
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
#inspect the model
res.hc
head(res.hc)
dataset <- read.csv("datamining.csv", sep = ",")
#scale the data then cluster the data
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
#inspect the model
res.hc
head(res.hc)
library("cluster")
library("factoextra")
library("magrittr")
install.packages("ggplot2")
library("ggplot2")
install.packages("ggplot2")
dataset <- read.csv("datamining.csv", sep = ",")
#scale the data then cluster the data
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
library(ggplot2)
dataset <- read.csv("datamining.csv", sep = ",")
#scale the data then cluster the data
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
library("dplyr")
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
#inspect the model
res.hc
head(res.hc)
head(res.hc)
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
cl <- kmeans(dataset[2:3], 3)
cl$centers
cl
plot(dataset[2:3], col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex =2)
cl <- kmeans(dataset[2:3], 3)
res.hc <- dataset[1:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
#scale the data then cluster the data
res.hc <- dataset[1:4] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
res.hc <- dataset[2:5] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
res.hc <- dataset[2:4] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
dataset <- read.csv("datamining.csv", sep = ",")
#scale the data then cluster the data
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>%
hclust(method = "ward.D2")
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>% hclust(method = "ward.D2")
View(res.hc)
View(mtcars)
View(dataset)
View(dataset)
res.hc <- dataset[3:3] %>% scale() %>% dist(method = "euclidean") %>% hclust(method = "ward.D2")
View(res.hc)
View(res.hc)
res.hc <- dataset[3:4] %>% scale() %>% dist(method = "euclidean") %>% hclust(method = "ward.D2")
res.hc[["order"]]
res.hc <- dataset[2:3] %>% scale() %>% dist(method = "euclidean") %>% hclust(method = "ward.D2")
#inspect the model
res.hc
head(res.hc)
#set and get location
getwd()
setwd("C:/Users/ASUS/Downloads/Data")
#library
install.packages("factoextra")
install.packages("cluster")
install.packages("magrittr")
install.packages("ggplot2")
library("ggplot2")
library("cluster")
library("factoextra")
install.packages("magrittr")
cl <- kmeans(dataset[2:3], 3)
cl$centers
cl
plot(dataset[2:3], col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex =2)
library(ggplot2)
library(cluster)
library(factoextra)
library(magrittr)
library(dplyr)
res.hc
head(res.hc)
cl <- kmeans(dataset[2:3], 3)
cl$centers
cl
plot(dataset[2:3], col = cl$cluster)
points(cl$centers, col = 1:2, pch = 8, cex =2)
fviz_dend(res.hc, k = 3,
cex = 0.5,
k_colors = c("#2E9FDF", "#FC4E07", "#00AFBB"),
color_labels_by_k = TRUE,
rect = TRUE
)
final <- kmeans(df, 4, nstart = 25)
print(final)
fviz_nbclust(datafix, kmeans, method = "wss")
View(dataset)
df <- read.csv("datamining.csv", sep = ",")
View(dataset)
df <- read.csv("datamining.csv", sep = ",")
View(dataset)
library(datasets)
library(plotly)
library(hrbrthemes)
library(tidyverse)
library(ggplot2)
library(cluster)
library(factoextra)
library(magrittr)
library(dplyr)
head(iris)
head(df)
ggplot(df, aes(month, year, number, color = state)) + geom_point()
ggplot(df, aes(sum(number), color = state)) + geom_point()
ggplot(df, aes(month,sum(number), color = state)) + geom_point()
ggplot(df, aes(number,year, color = state)) + geom_point()
ggplot(df, aes(year,number, color = state)) + geom_point()
set.seed(20)
irisCluster
set.seed(20)
irisCluster <- kmeans(df[, 2:4], 3, nstart = 20)
irisCluster
set.seed(20)
irisCluster <- kmeans(df[, 4:4], 3, nstart = 20)
irisCluster
set.seed(20)
irisCluster <- kmeans(df[, 4:4], 3, nstart = 20)
irisCluster
ggplot(df, aes(year,number, color = state)) + geom_point()
set.seed(20)
irisCluster <- kmeans(df[4:4], 3, nstart = 20)
irisCluster
table(irisCluster$cluster, df$state)
irisCluster$cluster <- as.factor(irisCluster$cluster)
ggplot(df, aes(year, number, color = iris$cluster)) + geom_point()
View(dataset)
set.seed(20)
irisCluster <- kmeans(df[2:4], 3, nstart = 20)
irisCluster
irisCluster$cluster <- as.factor(irisCluster$cluster)
ggplot(df, aes(year, number, color = iris$cluster)) + geom_point()
set.seed(20)
irisCluster <- kmeans(df[2:4], 3, nstart = 20)
irisCluster
table(irisCluster$cluster, df$state)
ggplot(df, aes(year,number, color = state)) + geom_point()
set.seed(20)
irisCluster <- kmeans(df[2:4], 3, nstart = 20)
irisCluster
table(irisCluster$cluster, df$state)
ggplot(data=by_states, aes(x=state,y=number, color = state)) + geom_point()
by_states <- df %>% group_by(state)
ggplot(data=by_states, aes(x=state,y=number, color = state)) + geom_point()
by_years<- df %>% group_by(year)
ggplot(data=by_years, aes(x=year,y=sum(number), color = state)) + geom_point()
g <- ggplot(data=summarise(.data=by_years, Jumlah = sum(number)),aes(x=year, y = Jumlah ))  + geom_point()
ggplotly(g,tooltip="Fire Cases Reported")
g <- ggplot(data=summarise(.data=by_years, Jumlah = sum(number)),aes(x=year, y = Jumlah ), color = state)  + geom_point()
ggplotly(g,tooltip="Fire Cases Reported")
ggplot(data=by_states, aes(x=year,y=sum(number), color = state)) + geom_point()
ggplot(data=by_states, aes(x=year,y=number, color = state)) + geom_point()
irisCluster$cluster <- as.factor(irisCluster$cluster)
ggplot(df, aes(year, number, color = iris$cluster)) + geom_point()
ggplot(data=by_states, aes(x=year,y=number, color = state)) + geom_point()
irisCluster <- kmeans(df[,2:4], 3, nstart = 20)
irisCluster
irisCluster$cluster <- as.factor(irisCluster$cluster)
ggplot(df, aes(year, number, color = iris$cluster)) + geom_point()
table(irisCluster$cluster, df$state)
irisCluster$cluster <- as.factor(irisCluster$cluster)
ggplot(df, aes(year, number, color = iris$cluster)) + geom_point()
table(irisCluster$cluster, df$state)
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
datafix <- scale(df)
fviz_nbclust(df, kmeans, method = "wss")
by_states <- df %>% group_by(state)
by_states
data.numerik<-by_states[1:3]
data.numerik
data.numerik<-by_states[2:4]
data.numerik
data.stds<-scale(by_states)
data.stds<-scale(data.numerik)
data.stds
fviz_nbclust(data.stds, kmeans, method = "silhouette")
Clustering=kmeans(data.stds,centers=5,nstart=25)
Clustering
fviz_cluster(Clustering, geom = "point", data = data.stds)+ggtitle("k=5")
final=data.frame(data, Clustering$cluster)
final=data.frame(data, clustering$cluster)
final=data.frame(data, Clustering$cluster)
final=df.frame(data, Clustering$cluster)
final=data.frame(df, Clustering$cluster)
View(final)
Clustering=kmeans(data.stds,centers=3,nstart=25)
fviz_cluster(Clustering, geom = "point", data = data.stds)+ggtitle("k=3")
final=data.frame(df, Clustering$cluster)
View(final)
data.numerik<-by_states[4:4]
data.numerik
final=data.frame(df, Clustering$cluster)
View(final)
fviz_cluster(Clustering, geom = "point", data = data.stds)+ggtitle("k=3")
data.stds<-scale(data.numerik)
data.numerik<-by_states[4:4]
data.numerik
data.stds<-scale(data.numerik)
data.stds
fviz_nbclust(data.stds, kmeans, method = "silhouette")
Clustering=kmeans(data.stds,centers=3,nstart=25)
Clustering
fviz_cluster(Clustering, geom = "point", data = data.stds)+ggtitle("k=3")
data.numerik<-by_states[4:4]
data.numerik
data.stds<-scale(data.numerik)
data.stds
fviz_nbclust(data.stds, kmeans, method = "silhouette")
Clustering=kmeans(data.stds,centers=3,nstart=25)
Clustering
fviz_cluster(Clustering, geom = "point", data = data.stds)+ggtitle("k=3")
data.numerik<-by_states[2:4]
data.numerik<-by_states[2:4]
data.numerik
data.stds<-scale(data.numerik)
data.stds
fviz_nbclust(data.stds, kmeans, method = "silhouette")
Clustering=kmeans(data.stds,centers=3,nstart=25)
Clustering
fviz_cluster(Clustering, geom = "point", data = data.stds)+ggtitle("k=3")
final=data.frame(df, Clustering$cluster)
View(final)
